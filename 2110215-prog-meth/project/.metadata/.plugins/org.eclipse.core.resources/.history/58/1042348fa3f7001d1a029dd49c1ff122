package game;

import entity.unit.BaseUnit;
import entity.building.BaseBuilding;

/**
 * The Cell class is used to represent individual cells in {@link GameMap}. It
 * stores data of {@link Terrain}, {@link BaseUnit} and {@link BaseBuilding} on this cell.
 */
public class Cell {

    /**
     * The position of this cell.
     */
    private Position position;

    /**
     * The type of this cell.
     */
    private Terrain terrain;

    /**
     * The entity on this cell.
     */
    private BaseUnit unit;

    /**
     * The building on this cell.
     */
    private BaseBuilding building;

    /**
     * The territory state.
     */
    private int territory;

    /**
     * The attack territory state.
     */
    private boolean attackTerritory;

    /**
     * The moving territory state.
     */
    private boolean moveTerritory;

    /**
     * Creates a new cell with void type.
     */
    public Cell() {
        this(Terrain.PLAIN);
    }

    /**
     * Creates a new cell with a specified type.
     *
     * @param terrain Type of the new cell.
     */
    public Cell(Terrain terrain) {
        setTerrain(terrain);
        setUnit(null);
        setBuilding(null);
    }

    /**
     * Getter for terrain.
     *
     * @return This cell's terrain.
     */
    public Terrain getTerrain() {
        return terrain;
    }

    /**
     * Setter for terrain.
     *
     * @param terrain The terrain to be set.
     */
    public void setTerrain(Terrain terrain) {
        this.terrain = terrain;
    }

    /**
     * Getter for unit.
     *
     * @return This cell's unit.
     */
    public BaseUnit getUnit() {
        return unit;
    }

    /**
     * Setter for unit.
     *
     * @param unit The unit to be set.
     */
    public void setUnit(BaseUnit unit) {
        this.unit = unit;
    }

    /**
     * Getter for building.
     *
     * @return This cell's building.
     */
    public BaseBuilding getBuilding() {
        return building;
    }

    /**
     * Setter for building.
     *
     * @param building The building to be set.
     */
    public void setBuilding(BaseBuilding building) {
        this.building = building;
    }

    /**
     * Getter for territory.
     *
     * @return The territory state of this cell.
     */
    public int getTerritory() {
        return territory;
    }

    /**
     * Setter for territory.
     *
     * @param isTerritory The territory state to be set.
     */
    public void setTerritory(int isTerritory) {
        this.territory = isTerritory;
    }

    /**
     * Increases the territory state by the specified amount.
     *
     * @param add The amount to increase the territory state by.
     */
    public void increaseTerritoryBy(int add) {
        setTerritory(getTerritory() + add);
    }

    /**
     * Getter for position.
     *
     * @return The position of this cell.
     */
    public Position getPosition() {
        return position;
    }

    /**
     * Setter for position.
     *
     * @param position The position to be set.
     */
    public void setPosition(Position position) {
        this.position = position;
    }

    /**
     * Checks if this cell is an attack territory.
     *
     * @return {@code true} if this cell is an attack territory, {@code false} otherwise
