package tax

import (
	"testing"
)

func TestCalculateThaiTax(t *testing.T) {
	tests := []struct {
		name     string
		revenue  float64
		expected float64
		hasError bool
	}{
		{"Negative revenue", -50000, 0, true},
		{"No tax (≤ 150,000)", 150000, 0, false},
		{"5% tax (≤ 300,000)", 200000, (200000 - 150000) * 0.05, false},
		{"10% tax (≤ 500,000)", 400000, (300000-150000)*0.05 + (400000-300000)*0.10, false},
		{"15% tax (≤ 750,000)", 700000, (300000-150000)*0.05 + (500000-300000)*0.10 + (700000-500000)*0.15, false},
		{"20% tax (≤ 1,000,000)", 900000, (300000-150000)*0.05 + (500000-300000)*0.10 + (750000-500000)*0.15 + (900000-750000)*0.20, false},
		{"25% tax (≤ 2,000,000)", 1500000, (300000-150000)*0.05 + (500000-300000)*0.10 + (750000-500000)*0.15 + (1000000-750000)*0.20 + (1500000-1000000)*0.25, false},
		{"30% tax (≤ 5,000,000)", 4000000, (300000-150000)*0.05 + (500000-300000)*0.10 + (750000-500000)*0.15 + (1000000-750000)*0.20 + (2000000-1000000)*0.25 + (4000000-2000000)*0.30, false},
		{"35% tax (> 5,000,000)", 6000000, (300000-150000)*0.05 + (500000-300000)*0.10 + (750000-500000)*0.15 + (1000000-750000)*0.20 + (2000000-1000000)*0.25 + (5000000-2000000)*0.30 + (6000000-5000000)*0.35, false},
	}

	for _, tc := range tests {
		t.Run(tc.name, func(t *testing.T) {
			tax, err := CalculateThaiTax(tc.revenue)
			if (err != nil) != tc.hasError {
				t.Errorf("Expected error: %v, got: %v", tc.hasError, err)
			}
			if tax != tc.expected {
				t.Errorf("Expected tax: %.2f, got: %.2f", tc.expected, tax)
			}
		})
	}
}
